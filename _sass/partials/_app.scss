// Main Styles

// See the other SASS partials for typography, variables etc.
// CSS Grid is used for the layout with fallbacks for less capable browsers
// declared beforehand, and a @supports feature query to reset fallbacks when
// necessary. https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks

// the body element is our primary layout grid
body {
  display: block;
}

// header, the first grid row
// it is also a grid for the logo and nav
header {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

// logo, is a grid item
header > h1 {
  display: inline-block;
  padding-bottom: 1rem;
  @media screen and (min-width: $screen-sm-min) {
    padding-bottom: 0;
  }
  a,
  a:visited {
    text-decoration: none;
    border: 0;
    color: white;
    @media screen and (min-width: $screen-sm-min) {
      padding: 1rem;
    }
  }
  a:hover {
    color: white;
  }
}

// main menu, is a grid item
nav {
  background-color: $m-black;
  height: 100vh;
  width: 100%;
  position: fixed;

  ul {
    // flexbox is better than grid for distributing an unknown qty of children
    display: flex;
    flex-direction: column;

    li {
      @include font-size($size-three, 1.25);
      @include button(transparent, #fff);
      font-family: $recoleta;
      margin-right: 2rem;
      display: inline-block;
      @media screen and (min-width: $screen-sm-min) {
        margin-right: 0;
      }
      a,
      a:visited {
        color: white;
        text-decoration: none;
        border: 0;
        @media screen and (min-width: $screen-sm-min) {
          padding: 1rem;
        }
        &[data-current="current page"] {
          // you can add an active nav item style here
        }
      }
      a:hover {
        color: white;
      }
    }
  }
}

// our main content wrapper, the width scales with font size
main {
  width: 100%;

  @include mq($from: desktop) {
    width: 600px;
    margin-left: auto;
    margin-right: auto;
  }
}

// blog posts list
html[data-current="blog"] main > section {
  ul li {
    padding: 2rem 0;
    border-bottom: 0.05em solid $hairline-color;
    p {
      padding-bottom: 0;
    }
  }
}

// adjacent blog posts links
nav[aria-label="Adjacent Posts"] {
  padding: 4rem 0;
  ul {
    display: flex;
    li {
      flex: 0 0 50%;
      width: auto;
      &:nth-child(2) {
        text-align: right;
      }
    }
  }
}

// contact form
html[data-current="contact"] main > form {
  display: grid;
  label {
    display: none;
  }
  input,
  textarea {
    width: 100%;
    padding: 1rem;
    margin-bottom: 2rem;
  }
  button {
    width: 100%;
  }
}

// reset CSS Grid fallbacks when they aren't required
@supports (display: grid) {
  html[data-current="contact"] main > form {
    input,
    textarea,
    button {
      width: auto;
      max-width: none;
    }
  }
}

footer {
  grid-column: full;
  display: grid;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 50rem) [main-end]
    minmax(1rem, 1fr) [full-end];
  background-color: $grey-bg-color;
  > small {
    grid-column: main;
  }
}
